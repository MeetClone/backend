// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Users Schema
model Users {
  userId        Int            @id @unique @default(autoincrement())
  email         String         @unique
  password      Bytes
  createdAt     DateTime       @default(now())
  lastLogin     DateTime       @default(now())
  UserMeetMap   UserMeetMap?
  Message       Message?
  MeetData      MeetData[]
  RefreshTokens RefreshTokens?
}

// MeetData Schema
model MeetData {
  meetId         Int          @id @unique @default(autoincrement())
  meetCode       String       @unique
  startedAt      DateTime     @default(now())
  endedAt        DateTime     @default(now())
  meetTranscript Bytes?
  meetAdmin      Int
  meetAdminData  Users        @relation(fields: [meetAdmin], references: [userId])
  UserMeetMap    UserMeetMap?
  Message        Message?
}

// refresh tokens list
model RefreshTokens {
  refreshTokenId   Int    @id @unique @default(autoincrement())
  refreshToken     Bytes?
  rtMappedUserId   Int    @unique
  rtMappedUserData Users  @relation(fields: [rtMappedUserId], references: [userId])
}

// UserMeetMap Schema --> stores the userId and meetId by referencing them from the
// Users table and MeetData table respectively
model UserMeetMap {
  UserMeetMap    Int      @id @unique
  mappedUserId   Int      @unique
  mappedMeetId   Int      @unique
  mappedUserData Users    @relation(fields: [mappedUserId], references: [userId])
  mappedMeetData MeetData @relation(fields: [mappedMeetId], references: [meetId])
}

// Message Schema --> stores all the messages along with userId and meetId by referencing
// them from the Users table and MeetData table respectively
model Message {
  messageId      Int      @id @unique @default(autoincrement())
  sentTime       DateTime @default(now())
  message_body   String   @default("")
  mappedUserId   Int      @unique
  mappedMeetId   Int      @unique
  mappedUserData Users    @relation(fields: [mappedUserId], references: [userId])
  mappedMeetData MeetData @relation(fields: [mappedMeetId], references: [meetId])
}
